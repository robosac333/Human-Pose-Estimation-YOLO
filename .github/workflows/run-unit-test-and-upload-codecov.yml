##############################################################################
#
# GitGub CI workflow syntax spec:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# CodeCov github action setup:
# https://github.com/codecov/codecov-action
#
# CodeCov badge setup:
# https://docs.codecov.com/docs/status-badges
#
# version 1.1
##############################################################################
name: Run Unit Test and Upload Coverage Report

on:
  # Triggered whenever push to main
  push:
    branches: [ "main" ]
  # Triggered whenever a pull request is created on main
  pull_request:
    branches: [ "main" ]
    types: [opened]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-run-upload:
    # Create a container of the latest Ubuntu
    runs-on: ubuntu-22.04
    
    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Install system packages
      - name: Install build packages
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo apt-get install -y doxygen lcov gcovr
          sudo apt-get install -y libopencv-dev
          sudo apt-get install -y libgtest-dev libgmock-dev

      # Configure and build
      - name: Configure CMake flags and build executables
        run: |
          cmake -D WANT_COVERAGE=ON -D CMAKE_BUILD_TYPE=Debug -S ./ -B build/
          cd build
          cmake --build . --clean-first
          make test_coverage
          lcov --capture --directory . --output-file test_coverage.info
          lcov --remove test_coverage.info '/usr/*' '*/_deps/*' '*/test/*' --output-file test_coverage.info
          
      # Upload to Codecov
      - name: Upload coverage result to CodeCov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{github.workspace}}/build/test_coverage.info
          fail_ci_if_error: true
          verbose: true
          disable_search: true
          plugin: none